

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Mar 03 17:57:22 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  0105                     	;# 
   189  0107                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0185                     	;# 
   198  0187                     	;# 
   199  0188                     	;# 
   200  0189                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203                           
   204                           	psect	idataCOMMON
   205  0777                     __pidataCOMMON:
   206                           
   207                           ;initializer for _display
   208  0777  343F               	retlw	63
   209  0778  3406               	retlw	6
   210  0779  345B               	retlw	91
   211  077A  344F               	retlw	79
   212  077B  3466               	retlw	102
   213  077C  346D               	retlw	109
   214  077D  347D               	retlw	125
   215  077E  3407               	retlw	7
   216  077F  347F               	retlw	127
   217  0780  346F               	retlw	111
   218  0008                     _PORTD	set	8
   219  0001                     _TMR0	set	1
   220  000B                     _INTCONbits	set	11
   221  0088                     _TRISD	set	136
   222  0081                     _OPTION_REGbits	set	129
   223  042C                     _TRISA4	set	1068
   224  0188                     _ANSEL	set	392
   225                           
   226                           	psect	cinit
   227  07BF                     start_initialization:	
   228                           ; #config settings
   229                           
   230  07BF                     __initialization:
   231                           
   232                           ; Initialize objects allocated to COMMON
   233  07BF  120A  118A  2777  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   234  07C4  00F0               	movwf	__pdataCOMMON& (0+127)
   235  07C5  120A  118A  2778  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   236  07CA  00F1               	movwf	(__pdataCOMMON+1)& (0+127)
   237  07CB  120A  118A  2779  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   238  07D0  00F2               	movwf	(__pdataCOMMON+2)& (0+127)
   239  07D1  120A  118A  277A  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   240  07D6  00F3               	movwf	(__pdataCOMMON+3)& (0+127)
   241  07D7  120A  118A  277B  120A  118A  	fcall	__pidataCOMMON+4	;fetch initializer
   242  07DC  00F4               	movwf	(__pdataCOMMON+4)& (0+127)
   243  07DD  120A  118A  277C  120A  118A  	fcall	__pidataCOMMON+5	;fetch initializer
   244  07E2  00F5               	movwf	(__pdataCOMMON+5)& (0+127)
   245  07E3  120A  118A  277D  120A  118A  	fcall	__pidataCOMMON+6	;fetch initializer
   246  07E8  00F6               	movwf	(__pdataCOMMON+6)& (0+127)
   247  07E9  120A  118A  277E  120A  118A  	fcall	__pidataCOMMON+7	;fetch initializer
   248  07EE  00F7               	movwf	(__pdataCOMMON+7)& (0+127)
   249  07EF  120A  118A  277F  120A  118A  	fcall	__pidataCOMMON+8	;fetch initializer
   250  07F4  00F8               	movwf	(__pdataCOMMON+8)& (0+127)
   251  07F5  120A  118A  2780  120A  118A  	fcall	__pidataCOMMON+9	;fetch initializer
   252  07FA  00F9               	movwf	(__pdataCOMMON+9)& (0+127)
   253                           
   254                           ; Clear objects allocated to COMMON
   255  07FB  01FA               	clrf	__pbssCOMMON& (0+127)
   256  07FC                     end_of_initialization:	
   257                           ;End of C runtime variable initialization code
   258                           
   259  07FC                     __end_of__initialization:
   260  07FC  0183               	clrf	3
   261  07FD  120A  118A  2F94   	ljmp	_main	;jump to C main() function
   262                           
   263                           	psect	bssCOMMON
   264  007A                     __pbssCOMMON:
   265  007A                     _count:
   266  007A                     	ds	1
   267                           
   268                           	psect	dataCOMMON
   269  0070                     __pdataCOMMON:
   270  0070                     _display:
   271  0070                     	ds	10
   272                           
   273                           	psect	inittext
   274  0781                     init_fetch0:	
   275                           ;	Called with low address in FSR and high address in W
   276                           
   277  0781  087E               	movf	btemp,w
   278  0782  008A               	movwf	10
   279  0783  087F               	movf	btemp+1,w
   280  0784  0082               	movwf	2
   281  0785                     init_ram0:	
   282                           ;Called with:
   283                           ;	high address of idata address in btemp 
   284                           ;	low address of idata address in btemp+1 
   285                           ;	low address of data in FSR
   286                           ;	high address + 1 of data in btemp-1
   287                           
   288  0785  120A  118A  2781  120A  118A  	fcall	init_fetch0
   289  078A  0080               	movwf	0
   290  078B  0A84               	incf	4,f
   291  078C  0804               	movf	4,w
   292  078D  067D               	xorwf	btemp+-1,w
   293  078E  1903               	btfsc	3,2
   294  078F  3400               	retlw	0
   295  0790  0AFF               	incf	btemp+1,f
   296  0791  1903               	btfsc	3,2
   297  0792  0AFE               	incf	btemp,f
   298  0793  2F85               	goto	init_ram0
   299                           
   300                           	psect	cstackCOMMON
   301  007B                     __pcstackCOMMON:
   302  007B                     ??_main:
   303  007B                     ?_main:	
   304                           ; 1 bytes @ 0x0
   305                           
   306                           
   307                           ; 2 bytes @ 0x0
   308  007B                     	ds	1
   309                           
   310                           	psect	maintext
   311  0794                     __pmaintext:	
   312 ;;
   313 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   314 ;;
   315 ;; *************** function _main *****************
   316 ;; Defined at:
   317 ;;		line 23 in file "TIMER_Digitales_II.c"
   318 ;; Parameters:    Size  Location     Type
   319 ;;		None
   320 ;; Auto vars:     Size  Location     Type
   321 ;;		None
   322 ;; Return value:  Size  Location     Type
   323 ;;                  2   22[None  ] int 
   324 ;; Registers used:
   325 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   326 ;; Tracked objects:
   327 ;;		On entry : B00/0
   328 ;;		On exit  : 0/0
   329 ;;		Unchanged: 0/0
   330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   331 ;;      Params:         0       0       0       0       0
   332 ;;      Locals:         0       0       0       0       0
   333 ;;      Temps:          1       0       0       0       0
   334 ;;      Totals:         1       0       0       0       0
   335 ;;Total ram usage:        1 bytes
   336 ;; This function calls:
   337 ;;		Nothing
   338 ;; This function is called by:
   339 ;;		Startup code after reset
   340 ;; This function uses a non-reentrant model
   341 ;;
   342                           
   343  0794                     _main:	
   344                           ;psect for function _main
   345                           
   346  0794                     l619:	
   347                           ;incstack = 0
   348                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   349                           
   350                           
   351                           ;TIMER_Digitales_II.c: 24:     INTCONbits.GIE = 0;
   352  0794  138B               	bcf	11,7	;volatile
   353                           
   354                           ;TIMER_Digitales_II.c: 25:     OPTION_REGbits.T0CS = 1;
   355  0795  1683               	bsf	3,5	;RP0=1, select bank1
   356  0796  1303               	bcf	3,6	;RP1=0, select bank1
   357  0797  1681               	bsf	1,5	;volatile
   358                           
   359                           ;TIMER_Digitales_II.c: 26:     OPTION_REGbits.T0SE = 1;
   360  0798  1601               	bsf	1,4	;volatile
   361  0799                     l621:
   362                           
   363                           ;TIMER_Digitales_II.c: 27:     TMR0 = 0;
   364  0799  1283               	bcf	3,5	;RP0=0, select bank0
   365  079A  1303               	bcf	3,6	;RP1=0, select bank0
   366  079B  0181               	clrf	1	;volatile
   367                           
   368                           ;TIMER_Digitales_II.c: 29:     TRISD = 0x00;
   369  079C  1683               	bsf	3,5	;RP0=1, select bank1
   370  079D  1303               	bcf	3,6	;RP1=0, select bank1
   371  079E  0188               	clrf	8	;volatile
   372                           
   373                           ;TIMER_Digitales_II.c: 30:     PORTD = 0x00;
   374  079F  1283               	bcf	3,5	;RP0=0, select bank0
   375  07A0  1303               	bcf	3,6	;RP1=0, select bank0
   376  07A1  0188               	clrf	8	;volatile
   377  07A2                     l623:
   378                           
   379                           ;TIMER_Digitales_II.c: 32:     TRISA4 = 1;
   380  07A2  1683               	bsf	3,5	;RP0=1, select bank1
   381  07A3  1303               	bcf	3,6	;RP1=0, select bank1
   382  07A4  1605               	bsf	5,4	;volatile
   383                           
   384                           ;TIMER_Digitales_II.c: 33:     ANSEL = 0x00;
   385  07A5  1683               	bsf	3,5	;RP0=1, select bank3
   386  07A6  1703               	bsf	3,6	;RP1=1, select bank3
   387  07A7  0188               	clrf	8	;volatile
   388  07A8                     l625:
   389                           
   390                           ;TIMER_Digitales_II.c: 36:         if (TMR0 == 10) {
   391  07A8  300A               	movlw	10
   392  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   393  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   394  07AB  0601               	xorwf	1,w	;volatile
   395  07AC  1D03               	btfss	3,2
   396  07AD  2FAF               	goto	u11
   397  07AE  2FB0               	goto	u10
   398  07AF                     u11:
   399  07AF  2FB2               	goto	l629
   400  07B0                     u10:
   401  07B0                     l627:
   402                           
   403                           ;TIMER_Digitales_II.c: 37:             TMR0 = 0;
   404  07B0  0181               	clrf	1	;volatile
   405                           
   406                           ;TIMER_Digitales_II.c: 38:             count = 0;
   407  07B1  01FA               	clrf	_count
   408  07B2                     l629:
   409                           
   410                           ;TIMER_Digitales_II.c: 40:         count = TMR0;
   411  07B2  0801               	movf	1,w	;volatile
   412  07B3  00FB               	movwf	??_main
   413  07B4  087B               	movf	??_main,w
   414  07B5  00FA               	movwf	_count
   415  07B6                     l631:
   416                           
   417                           ;TIMER_Digitales_II.c: 41:         PORTD = ~display [count];
   418  07B6  087A               	movf	_count,w
   419  07B7  3E70               	addlw	(low (_display| 0))& (0+255)
   420  07B8  0084               	movwf	4
   421  07B9  0900               	comf	0,w
   422  07BA  0088               	movwf	8	;volatile
   423  07BB  2FA8               	goto	l625
   424  07BC  120A  118A  2800   	ljmp	start
   425  07BF                     __end_of_main:
   426  007E                     btemp	set	126	;btemp
   427  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      1      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      1       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       C      12        0.0%
ABS                  0      0       C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Mar 03 17:57:22 2022

                      pc 0002                       u10 07B0                       u11 07AF  
                     fsr 0004                      l621 0799                      l631 07B6  
                    l623 07A2                      l625 07A8                      l627 07B0  
                    l619 0794                      l629 07B2                      fsr0 0004  
                    indf 0000                     _TMR0 0001                     _main 0794  
                   btemp 007E                     start 0000                    ?_main 007B  
                  _ANSEL 0188                    _PORTD 0008                    _TRISD 0088  
                  _count 007A                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07BF             __end_of_main 07BF  
                 ??_main 007B                   _TRISA4 042C             __pdataCOMMON 0070  
__end_of__initialization 07FC           __pcstackCOMMON 007B           _OPTION_REGbits 0081  
             __pmaintext 0794                  _display 0070     end_of_initialization 07FC  
          __pidataCOMMON 0777      start_initialization 07BF               init_fetch0 0781  
            __pbssCOMMON 007A                ___latbits 0002               _INTCONbits 000B  
               init_ram0 0785  
